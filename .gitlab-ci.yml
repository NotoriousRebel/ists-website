stages:
  - build
  - release
  - deploy

build:
  stage: build
  tags:
    - docker
  image: docker:latest

  script:
    - "docker build -v /var/run/docker.sock:/var/run/docker.sock -t ${CI_PROJECT_PATH}:build-${CI_BUILD_REF_NAME} ."
    - "docker run -v /var/run/docker.sock:/var/run/docker.sock ${CI_PROJECT_PATH}:build-${CI_BUILD_REF_NAME}"

release:
  stage: release
  tags:
    - docker
  image: docker:latest
  only:
    - "master"

  before_script:
    - "docker version"
    - "docker info"
    - "docker login -v /var/run/docker.sock:/var/run/docker.sock-u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}"

  script:
    - "docker build -v /var/run/docker.sock:/var/run/docker.sock-t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest --pull ."
    - "docker push -v /var/run/docker.sock:/var/run/docker.sock${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"

  after_script:
    - "docker logout ${CI_REGISTRY}"

deploy:
  stage: deploy
  tags:
    - docker
  image: gitlab/dind:latest
  only:
    - "master"
  services:
    - docker:dind

  before_script:
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_SERVER_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOYMENT_SERVER_IP >> ~/.ssh/known_hosts

  script:
    - ssh $DEPLOYMENT_SERVER_USER@$DEPLOYMENT_SERVER_IP "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}; docker run ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest -p localhost:8001:8000"
